# https://taskfile.dev

version: '3'
vars:
    ##################### QUICK START #########################
    # 1 Change these 5 placeholder values
    # 2 Copy .env-example to .env and modify for your dev vault
    # 3 Install Taskfile from https://taskfile.dev/installation
    # 4 Run `task init`
    #  After modifying code just run the command "task" to build
    #  and test it in your dev Obsidian vault after reloading it
    PLUGIN_ID: plugin-template
    PLUGIN_NAME: Plugin Template
    PLUGIN_DESCRIPTION: A template for creating Obsidian plugins
    AUTHOR: Stefan Danzl
    AUTHOR_URL: https://github.com/stefandanzl
    ############################################################
    #
    DIR_PLUGIN: '{{.VAULTS_DIR}}/{{.VAULT_NAME}}/.obsidian/plugins/{{.PLUGIN_ID}}'
    VERSION:
        sh: node -e "console.log(require('./package.json').version)"
    FILES: 'main.js manifest.json styles.css'

# Rename .env-example to .env and modify for your setup
dotenv: ['.env']

tasks:
    default:
        cmds:
            - task: build
            - task: copy
    copy:
        cmds:
            - cp main.js '{{.DIR_PLUGIN}}/main.js'
            - cp styles.css '{{.DIR_PLUGIN}}/styles.css'
            - cp manifest.json '{{.DIR_PLUGIN}}/manifest.json'

    build:
        cmds:
            - npm run build
    patch:
        cmds:
            - npm version patch
    git:
        cmds:
            - git add .
            - git commit -m "task"
            - git push

    minify:
        cmds:
            - terser main.js -o main.min.js
    time:
        cmds:
            - date +%T

    dev: npm run dev

    bump:
        desc: 'Commit Changes and bump minor version'
        cmds:
            - git add .
            - cmd: git commit -m "bump"
              ignore_error: true
            - npm version minor
            - npm run version

    release:
        desc: 'Commit Changes, create version tag, push to Github and create a new release on GitHub'
        cmds:
            - git add .
            - cmd: git commit -m "{{.VERSION}} Commit"
              ignore_error: true
            # - git tag {{.VERSION}}
            - git push
            - git push --tags
            - task: release-create

    release-create:
        cmds:
            - gh release create {{.VERSION}} --title "{{.VERSION}}" --notes "New release of the {{.PLUGIN_NAME}} plugin for Obsidian." {{.FILES}}

    replace-name:
        desc: 'Replace placeholders in template files'
        cmds:
            - sed -i '' 's/PLUGIN_ID/{{.PLUGIN_ID}}/g' package.json manifest.json src/main.ts README.md
            - sed -i '' 's/PLUGIN_NAME/{{.PLUGIN_NAME}}/g' package.json manifest.json README.md
            - sed -i '' 's/PLUGIN_DESCRIPTION/{{.PLUGIN_DESCRIPTION}}/g' package.json manifest.json README.md
            - sed -i '' 's/AUTHOR_NAME/{{.AUTHOR}}/g' package.json manifest.json README.md
            - sed -i '' 's/AUTHOR_URL/{{.AUTHOR_URL}}/g' package.json manifest.json

    initialize:
        desc: 'Install plugin to vault directory'
        aliases: ['init']
        cmds:
            - task: replace-name
            - npm update
            - mkdir -p {{.DIR_PLUGIN}}

    test:
        cmds:
            - echo {{.VERSION}}

    setup-repo:
        desc: 'Initialize git repository and make first commit'
        cmds:
            - git init
            - git add .
            - git commit -m "Initial commit Plugin template setup"
            - echo "Repository initialized. Run 'task release' when ready for first release."

    lint:
        desc: Lints all ts and js in src/ folder. May require `npm install -g eslint`
        aliases: ['linter']
        cmds:
            - eslint src/.
